#include <stdio.h> 
#include <stdlib.h> 
#include <stdbool.h> 
#include <time.h> 
 
#define MAX_BLOCKS 100 
 
bool bit_vector[MAX_BLOCKS]; int 
directory[MAX_BLOCKS]; 
int num_blocks; 
 
// Function to initialize the bit vector and directory void 
initialize() { 
 for (int i = 0; i < num_blocks; i++) { 
bit_vector[i] = false;
directory[i] = -1; 
 } 
} 
 
// Function to display the bit vector 
void show_bit_vector() { printf("Bit 
Vector:\n"); for (int i = 0; i < 
num_blocks; i++) { 
 printf("%d ", bit_vector[i]); 
 } 
 printf("\n"); 
} 
 
// Function to create a new file 
void create_new_file(int file_index, int file_size) { 
int num_allocated = 0; 
 int current_block = rand() % num_blocks; // Start from a random block 
 
 while (num_allocated < file_size) { if 
(!bit_vector[current_block]) { 
bit_vector[current_block] = true; 
directory[current_block] = file_index; 
num_allocated++; 
 } 
 current_block = (current_block + 1) % num_blocks; // Move to the next block 
 } 
}
void show_directory() { 
printf("Directory:\n"); for (int i = 0; 
i < num_blocks; i++) { if 
(directory[i] != -1) { 
 printf("Block %d -> File %d\n", i, directory[i]); 
 } 
 } 
} 
 
int main() { 
 srand(time(NULL)); // Seed random number generator 
 
 // Input the number of blocks on the disk 
printf("Enter the number of blocks on the disk: "); 
 scanf("%d", &num_blocks); 
 
 initialize(); // Initialize bit vector and directory 
 
 char choice; int 
file_index, file_size; 
 
 // Menu-driven program while 
(1) { printf("\nMenu:\n"); 
printf("1. Show Bit Vector\n"); 
printf("2. Create New File\n"); 
printf("3. Show Directory\n"); 
printf("4. Exit\n"); 
printf("Enter your choice: ");
scanf(" %c", &choice); 
switch (choice) { 
case '1': 
 show_bit_vector(); 
 break; 
case '2': 
 printf("Enter the file index: "); 
scanf("%d", &file_index); 
 printf("Enter the file size (number of blocks): "); 
scanf("%d", &file_size); 
 create_new_file(file_index, file_size); 
break; case '3': 
 show_directory(); 
 break; 
case '4': 
 printf("Exiting...\n"); 
 return 0; 
default: 
 printf("Invalid choice. Please try again.\n"); 
 } 
 } 
 
 return 0; 
}